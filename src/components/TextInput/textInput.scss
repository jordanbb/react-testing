@import '~shared/css/helpers/variables';
@import '~shared/css/helpers/mixins';

.container {
  position: relative;
  margin: 0 0 48px 0;
}

input {
  position: relative;
  z-index: 1;
  display: block;
  width: 100%;
  padding: 0 0 4px 0;
  background: transparent;
  border: none;
  transition: all 0.3s ease;
  box-sizing: border-box;

  .container.sizeRegular & {
    @include font(heading-style-5, false);
  }

  .container.sizeLarge & {
    @include font(heading-style-6, false);
  }

  .container.light & {
    color: $dark-to-light-8;

    &.invalid {
      color: $main-red-light;

      @include inputPlaceholder {
        color: $main-red-light;
      }

    }

    &.available {
      color: $main-green-light;
    }

  }

  .container.dark & {
    color: $dark-to-light-3;

    &.invalid {
      color: $main-red;

      @include inputPlaceholder {
        color: $main-red;
      }

    }

    &.available {
      color: $main-green;
    }

    @include inputPlaceholder {
      color: $dark-to-light-3;
      opacity: 1;
      transition: color 0.3s ease;
    }

  }

  &:focus {
    outline: none;

    .container.light &:not(.invalid):not(.available):not([readonly]):focus {
      color: $main-blue-light;
    }

    .container.dark &:not(.invalid):not(.available):not([readonly]):focus {
      color: $main-blue;

      @include inputPlaceholder {
        color: $main-blue;
        opacity: 1;
      }

    }

  }

  .container.hasSearch & {
    padding-left: 20px;
  }

  .container.clickable & {
    cursor: pointer;

    @at-root .container.light.clickable input {

      &:hover {
        color: $main-blue-light;

        @include inputPlaceholder {
          color: $main-blue-light;
          opacity: 1;
        }

      }

    }

    @at-root .container.dark.clickable input {

      &:hover {
        color: $main-blue;

        @include inputPlaceholder {
          color: $main-blue;
          opacity: 1;
        }

      }

    }

  }

}

label {
  position: absolute;
  top: 8px;
  left: 0;
  transition: all 0.2s ease;

  .container.sizeRegular & {
    @include font(heading-style-5, false);
    line-height: 16px;
    transform: translateY(-20%);
  }

  .container.sizeLarge & {
    @include font(heading-style-6, false);
    line-height: 24px;
  }

  @at-root .container input.filled ~ label,
  .container input:focus ~ label {
    font-style: italic;
    font-weight: $text-style-light;
  }

  @at-root .container.sizeRegular input.filled ~ label,
  .container.sizeRegular input:focus  ~ label {
    transform: translateY(-150%);
  }

  @at-root .container.sizeLarge input.filled ~ label,
  .container.sizeLarge input:focus  ~ label {
    transform: translate(-18%, -120%) scale(0.67)
  }

  @at-root .container.light {

    label {
      color: $dark-to-light-8;
    }

    input:not([readonly]):not(.invalid):not(.available):focus  ~ label {
      color: $main-blue-light;
    }

    input.invalid ~ label {
      color: $main-red-light;
    }

    input.available ~ label {
      color: $main-green-light;
    }

  }

  @at-root .container.dark {

    label {
      color: $dark-to-light-3;
    }

    input.filled ~ label {
      color: $dark-to-light-6;
    }

    input:not([readonly]):not(.invalid):not(.available):focus  ~ label {
      color: $main-blue;
    }

    input.invalid ~ label {
      color: $main-red;
    }

    input.available ~ label {
      color: $main-green;
    }

  }

}

.input-text-static-label {
  @include font(heading-style-4,false);
  position: absolute;
  top: -20px;
  left: 0;
  color: $dark-to-light-6;
  text-align: left;
  pointer-events: none;
  display: block;
  transition: all 0.2s ease;

  @at-root .container.dark {

    input.invalid ~ .input-text-static-label {
      color: $main-red;
    }

  }

  @at-root .container.light {

    input.invalid ~ .input-text-static-label {
      color: $main-red-light;
    }

  }

}

.underline {
  position: relative;
  left: 0;
  width: 100%;
  height: 4px;
  transition: all 0.3s ease;

  &.hideBar {
    width: 0;
  }

  @at-root .container.light {

    .underline {
      background: $dark-to-light-8;
    }

    & input:focus ~ .underline {
      background: $main-blue-light;
    }

    & input.invalid ~ .underline {
      background: $main-red-light;
    }

    & input.available ~ .underline {
      background: $main-green-light;
    }

  }

  @at-root .container.dark {

    .underline {
      background: $dark-to-light-3;
    }

    & input:focus ~ .underline {
      background: $main-blue;
    }

    & input.invalid ~ .underline {
      background: $main-red;
    }

    & input.available ~ .underline {
      background: $main-green;
    }

  }

}

.error {
  @include font(standard-paragraph-large);
  position: absolute;
  width: 100%;
  margin: 4px 0;

  @at-root .container.light {

    & input.invalid ~ .error {
      color: $main-red-light;
    }

    & input.available ~ .error {
      color: $main-green-light;
    }

  }

  @at-root .container.dark {

    & input.invalid ~ .error {
      color: $main-red;
    }

    & input.available ~ .error {
      color: $main-green;
    }

  }

}