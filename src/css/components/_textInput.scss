/*------------------------------------*\
    TEXT BASED INPUTS
\*------------------------------------*/

.input_container {
  position: relative;
  margin: 0 0 48px 0;

  input {
    position: relative;
    z-index: 1;
    display: block;
    width: 100%;
    padding: 0 0 4px 0;
    background: transparent;
    border: none;
    transition: all 0.3s ease;
    box-sizing: border-box;

    @at-root .input_container.size_regular input {
      @include font(heading-style-5, false);
    }

    @at-root .input_container.size_large input {
      @include font(heading-style-6, false);
    }

    @at-root .input_container.light input {
      color: $dark-to-light-8;

      &.invalid {
        color: $main-red-light;

        @include inputPlaceholder {
          color: $main-red-light;
        }

      }

      &.available {
        color: $main-green-light;
      }

    }

    @at-root .input_container.dark input {
      color: $dark-to-light-3;

      &.invalid {
        color: $main-red;

        @include inputPlaceholder {
          color: $main-red;
        }

      }

      &.available {
        color: $main-green;
      }

      @include inputPlaceholder {
        color: $dark-to-light-3;
        opacity: 1;
        transition: color 0.3s ease;
      }

    }

    &:focus {
      outline: none;

      @at-root .input_container.light input:not(.invalid):not(.available):not([readonly]):focus {
        color: $main-blue-light;
      }

      @at-root .input_container.dark input:not(.invalid):not(.available):not([readonly]):focus {
        color: $main-blue;

        @include inputPlaceholder {
          color: $main-blue;
          opacity: 1;
        }

      }

    }

    @at-root .input_container.has_search input {
      padding-left: 20px;
    }

    @at-root .input_container.clickable input {
      cursor: pointer;

      @at-root .input_container.light.clickable input {

        &:hover {
          color: $main-blue-light;

          @include inputPlaceholder {
            color: $main-blue-light;
            opacity: 1;
          }

        }

      }

      @at-root .input_container.dark.clickable input {

        &:hover {
          color: $main-blue;

          @include inputPlaceholder {
            color: $main-blue;
            opacity: 1;
          }

        }

      }

    }

  }

  label {
    position: absolute;
    top: 8px;
    left: 0;
    transition: all 0.2s ease;

    @at-root .input_container.size_regular label {
      @include font(heading-style-5, false);
      line-height: 16px;
      transform: translateY(-20%);
    }

    @at-root .input_container.size_large label {
      @include font(heading-style-6, false);
      line-height: 24px;
    }

    @at-root .input_container input.filled ~ label,
    .input_container input:focus ~ label {
      font-style: italic;
      font-weight: $text-style-light;
    }

    @at-root .input_container.size_regular input.filled ~ label,
    .input_container.size_regular input:focus  ~ label {
      transform: translateY(-150%);
    }

    @at-root .input_container.size_large input.filled ~ label,
    .input_container.size_large input:focus  ~ label {
      transform: translate(-18%, -120%) scale(0.67)
    }

    @at-root .input_container.light {

      label {
        color: $dark-to-light-8;
      }

      input:not([readonly]):not(.invalid):not(.available):focus  ~ label {
        color: $main-blue-light;
      }

      input.invalid ~ label {
        color: $main-red-light;
      }

      input.available ~ label {
        color: $main-green-light;
      }

    }

    @at-root .input_container.dark {

      label {
        color: $dark-to-light-3;
      }

      input.filled ~ label {
        color: $dark-to-light-6;
      }

      input:not([readonly]):not(.invalid):not(.available):focus  ~ label {
        color: $main-blue;
      }

      input.invalid ~ label {
        color: $main-red;
      }

      input.available ~ label {
        color: $main-green;
      }

    }

  }

  .input_text_static_label {
    @include font(heading-style-4,false);
    position: absolute;
    top: -20px;
    left: 0;
    color: $dark-to-light-6;
    text-align: left;
    pointer-events: none;
    display: block;
    transition: all 0.2s ease;

    @at-root .input_container.dark {

      input.invalid ~ .input_text_static_label {
        color: $main-red;
      }

    }

    @at-root .input_container.light {

      input.invalid ~ .input_text_static_label {
        color: $main-red-light;
      }

    }

  }

}

.input_bar {
  position: relative;
  left: 0;
  width: 100%;
  height: 4px;
  transition: all 0.3s ease;

  &.hide_bar {
    width: 0;
  }

  @at-root .input_container.light {

    .input_bar {
      background: $dark-to-light-8;
    }

    & input:focus ~ .input_bar {
      background: $main-blue-light;
    }

    & input.invalid ~ .input_bar {
      background: $main-red-light;
    }

    & input.available ~ .input_bar {
      background: $main-green-light;
    }

  }

  @at-root .input_container.dark {

    .input_bar {
      background: $dark-to-light-3;
    }

    & input:focus ~ .input_bar {
      background: $main-blue;
    }

    & input.invalid ~ .input_bar {
      background: $main-red;
    }

    & input.available ~ .input_bar {
      background: $main-green;
    }

  }

}

.input_error {
  @include font(standard-paragraph-large);
  position: absolute;
  width: 100%;
  margin: 4px 0;

  @at-root .input_container.light {

    & input.invalid ~ .input_error {
      color: $main-red-light;
    }

    & input.available ~ .input_error {
      color: $main-green-light;
    }

  }

  @at-root .input_container.dark {

    & input.invalid ~ .input_error {
      color: $main-red;
    }

    & input.available ~ .input_error {
      color: $main-green;
    }

  }

}

.input_checkmark {
  display: block;
  position: absolute;
  right: -50px;
  top: 50%;
  margin: -15px 0 0 0;
  width: 12px;
  height: 20px;
  transform: rotate(30deg);
  visibility: hidden;
  opacity: 0;
  transition: all .3s ease;

  &:before,
  &:after {
    content: "";
    position: absolute;

    @at-root .light > & {
      background: $main-green-light;
    }

    @at-root .dark > & {
      background: $main-green;
    }

  }

  &:before {
    width: 3px;
    height: 20px;
    right: 0;
    top: 0;
  }

  &:after {
    width: 10px;
    height: 3px;
    right: 1px;
    bottom: 1px;
    transform: rotate(15deg);
  }

  .input_container input.available ~ & {
    visibility: visible;
    right: 0;
    opacity: 1;
  }
}

.input_search_icon {
  display: block;
  position: absolute;
  left: 0;
  width: 16px;
  height: 16px;
  transition: background-color 0.3s ease;
  @include prefix(mask, url(../images/search-icon-type-1.svg) no-repeat, webkit);

  .input_container.size_regular & {
    top: 4px;
  }

  .input_container.dark & {
    background-color: $dark-to-light-3;
  }

  .input_container.dark input:focus ~ & {
    background-color: $main-blue;
  }

}

.input_text_save_container {
  position: absolute;
  top: -22px;
  right: 0;
  overflow: hidden;

  .button_loading_icon {
    display: block;
    width: 100%;
    height: 100%;
    margin: 0;

    > div {
      width: 8px;
      height: 8px;
      background-color: $main-blue;
      margin-right: 0;
    }

  }

}

.input_text_save_link {
  display: flex;
  flex-flow: row nowrap;
  transition: transform 0.3s ease, border-color 0.2s ease;
  align-items: flex-start;
  cursor: pointer;
  //border-bottom: 2px solid transparent;
  transform: translateX(100%) translateZ(0);

  /*
  &:hover {

    .input_container.dark & {
      border-color: $main-blue;
    }

    .input_container.light & {
      border-color: $main-blue-light;
    }

  }
  */

  .input_text_save_container.active & {
    transform: translateX(0) translateZ(0);
  }

  .input_text_save_container.loading & {
    display: none;
  }

}

.input_text_save_link_text {
  @include font(standard-paragraph-small);

  .input_container.dark & {
    color: $main-blue;
  }

  .input_container.light & {
    color: $main-blue-light;
  }

}

.input_text_save_link_checkmark {
  display: block;
  position: relative;
  width: 10px;
  height: 14px;
  transform: rotate(30deg);
  //transform: rotate(30deg) translateY(2px);
  margin-right: 4px;
  padding-left: 4px;
  transition: all 0.3s ease;

  /*
  .input_text_save_link:hover & {
    transform: scale(1.2) translate(-1px,1px) rotate(30deg);
  }
  */

  &:before,
  &:after {
    content: "";
    position: absolute;

    @at-root .input_container.light & {
      background: $main-blue-light;
    }

    @at-root .input_container.dark & {
      background: $main-blue;
    }

  }

  &:before {
    width: 2px;
    height: 100%;
    right: 0;
    top: 0;
  }

  &:after {
    width: 50%;
    height: 2px;
    right: 1px;
    bottom: 1px;
    transform: rotate(15deg);
  }

}

.input_text_save_loading_container {
  display: none;
  width: 60px;
  height: 20px;

  .input_text_save_container.loading & {
    display: block;
  }

}